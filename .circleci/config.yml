version: 2.1
orbs:
  # orgs contain basic recipes and reproducible actions (install node, aws, etc.)
  node: circleci/node@4.7.0
  aws-cli: circleci/aws-cli@2.0.3
  eb: circleci/aws-elastic-beanstalk@2.0.1
  # different jobs are calles later in the workflows sections
jobs:
  filters:
      branches:
        only: master
  build:   
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - node/install
      # check current version of node
      - run:
          name: Check current version of node
          command: node -v
      # the current default version of node on CircleCIdefault - 17.0.1 - creates issues
      # as a result, we need to control the node version
      - run:
          name: Get and install node version manager.
          command: curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.38.0/install.sh | bash
      # install node version that works fine locally, ie.e., 14.17.0
      - run:
          name: Install Node version 14.17.0 using NVM and set as default
          command: |
            nvm install 14.17.0
            nvm alias default 14.17.0
      - run:
          name: Verify new version of node
          command: node -v
      - checkout
      - aws-cli/setup
      - eb/setup
      # install dependencies for both API and frontend
      - run:
          name: Front-End Install
          command: |
            cd udagram
            npm run frontend:install
            cd ..
      - run:
          name: Front-End Build
          command: |
            cd udagram
            npm run frontend:build
            cd ..
      - run:
          name: Front-End Deploy
          command: |
            cd udagram
            npm run frontend:deploy
            cd ..
      - run:
          name: Back-End Install
          command: |
            cd udagram
            npm run backend:install
            cd ..
      - run:
          name: Back-End Build
          command: |
            cd udagram
            npm run backend:build
            cd ..
      - run:
          name: Back-End Deploy
          command: |
            cd udagram
            npm run backend:deploy
            cd ..